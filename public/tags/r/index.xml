<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Justin Minsk&#39;s Blog</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Justin Minsk&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1980 Team Homeruns</title>
      <link>/post/1980teamhr/</link>
      <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/1980teamhr/</guid>
      <description>Import libraries:
library(Lahman)library(dplyr)library(ggplot2)library(ggiraph)Set up the data:
df&amp;lt;-Teams%&amp;gt;%filter(yearID == 1980)%&amp;gt;%select(name, HR)%&amp;gt;%arrange(HR)#sort the teams from lahman by the year 1980 and show the name and HR totaldf$name&amp;lt;-factor(df$name, levels = df$name)#change the type of data to a factor and not a chr, then level it by our dplyr querry Create an interactive graph with ggiraph:
g&amp;lt;-ggplot() +geom_bar_interactive(data = df, aes(x = name, y = HR, tooltip = HR, data_id = name), stat = &amp;quot;identity&amp;quot;, color = &amp;quot;blue&amp;quot;, fill = &amp;quot;white&amp;quot;) +coord_flip()+ggtitle(&amp;quot;1980 Team Homeruns&amp;quot;)+ylab(&amp;quot;Homeruns&amp;quot;)+xlab(&amp;quot;Team Name&amp;quot;)#graph the data using a bar graphggiraph(code = print(g), hover_css = &amp;quot;fill:red;stroke:black&amp;quot;){&#34;</description>
    </item>
    
    <item>
      <title>Babe Ruth Homeruns by Year</title>
      <link>/post/baberuthhrbyyear/</link>
      <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/baberuthhrbyyear/</guid>
      <description>Import Libraries:
library(Lahman)library(dplyr)library(ggplot2)library(ggiraph)Sort the data:
df&amp;lt;-Batting%&amp;gt;%filter(playerID == &amp;quot;ruthba01&amp;quot;)%&amp;gt;%select(yearID, HR)#get Babe Ruths Homeruns by yearGraph the data:
g&amp;lt;-ggplot()+geom_line(data = df, aes(x = yearID, y = HR)) +geom_point_interactive(data = df, aes(x = yearID, y = HR, tooltip = HR, data_id = yearID))#graph the dataggiraph(code = print(g), hover_css = &amp;quot;fill:white;stroke:red&amp;quot;){&#34;x&#34;:{&#34;html&#34;:&#34;\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 0\n \n \n 20\n \n \n 40\n \n \n 60\n \n \n \n \n \n \n \n \n \n \n \n 1915\n \n \n 1920\n \n \n 1925\n \n \n 1930\n \n \n 1935\n \n \n yearID\n \n \n HR\n \n \n\ndiv.</description>
    </item>
    
    <item>
      <title>Changing data types using dplyr</title>
      <link>/post/data_type_dplyr/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data_type_dplyr/</guid>
      <description>Showing how to sort data using dyplr to make ggplots show a graph that it would not without changing the data type.
Load libraries:
library(Lahman)library(dplyr)library(ggplot2)Change the data with dyplr:
df&amp;lt;-Teams%&amp;gt;%filter(yearID == 1980)%&amp;gt;%select(name, HR)%&amp;gt;%arrange(HR)#sort the teams from lahman by the year 1980 and show the name and HR totalclass(df$name)## [1] &amp;quot;character&amp;quot;#look at the data type of name in the data framedf$name&amp;lt;-factor(df$name, levels = df$name)#change the type of data to a factor and not a chr, then level it by our dplyr querryclass(df$name)## [1] &amp;quot;factor&amp;quot;#looking at the data type againGraph the data:</description>
    </item>
    
    <item>
      <title>Histogram</title>
      <link>/post/histogram/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/histogram/</guid>
      <description>Creating histograms using ggplots.
load libraries:
library(Lahman)library(dplyr)library(ggplot2)Sort the data using dplyr:
df&amp;lt;-Master%&amp;gt;%filter(!is.na(weight))%&amp;gt;%select(weight)#get the weights form master of lahmanGraph the data:
ggplot() +geom_histogram(data = df, aes(x = weight), color = &amp;quot;white&amp;quot;, fill = &amp;quot;blue&amp;quot;, bins = 25) +ggtitle(&amp;quot;Baseball Player Weights&amp;quot;)#graph the weights in a histogram</description>
    </item>
    
    <item>
      <title>Graphing Lahman Data</title>
      <link>/post/lahmangraph/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/lahmangraph/</guid>
      <description>PrefaceThis post is to show how to get data to a point to graph and then graph it using ggplots.
First install libraries:
library(Lahman)library(dplyr)library(ggplot2)library(ggiraph)Then join the tables:
df&amp;lt;-Batting%&amp;gt;%group_by(playerID)%&amp;gt;%summarise(career_HR=sum(HR), career_SO=sum(SO))%&amp;gt;%filter(career_HR&amp;gt;=400)#get the playerID&amp;#39;s of all players who have a HR total of over 399HRvSO&amp;lt;-inner_join(df, Master, by=c(&amp;quot;playerID&amp;quot;))%&amp;gt;%select(nameFirst, nameLast, career_HR, career_SO)#join with the master table to get first and last names of the players using plaerIDHRvSO$name&amp;lt;-paste(HRvSO$nameFirst, HRvSO$nameLast)#create a name column that combines first and last nameThen graph:</description>
    </item>
    
    <item>
      <title>dplyr</title>
      <link>/post/dplyr/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/dplyr/</guid>
      <description>Justin Minsk
PrefaceThe purpose of this website is to learn basic website building using Rmarkdown and to create notes for dpylr as a Mercyhurst grad student.
Filter Columns and RowsWhen using dplyr, you can filter using select and filter commands. Below is an example of how this works. First you need to install and load Lahman and dplyr packages.
library(Lahman)library(dplyr)Now we will run an example of filtering by taking from Batting the playerID, yearID, HR and then filter so the table only contains NY Yankees from the year 1927.</description>
    </item>
    
    <item>
      <title>ggplots</title>
      <link>/post/ggplots/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplots/</guid>
      <description>Data VisulzationThe package I am using for ggplots2 and dyplr.
library(tidyverse)First set of data.
mpg## # A tibble: 234 x 11## manufacturer model displ year cyl trans drv cty hwy## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;## 1 audi a4 1.8 1999 4 auto(l5) f 18 29## 2 audi a4 1.8 1999 4 manual(m5) f 21 29## 3 audi a4 2.</description>
    </item>
    
  </channel>
</rss>