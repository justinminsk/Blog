<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Justin Minsk&#39;s Blog</title>
    <link>/tags/python/</link>
    <description>Recent content in Python on Justin Minsk&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pokemon</title>
      <link>/post/pokemon/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/pokemon/</guid>
      <description>How to run the codeTo run the code you should use anaconda3 or jupyter notebook with python 3. You will also need numpy, pandas, matplotlib, seaborn, and pylab libraries for python.
A Look at Pokemon by GenerationPokemon became a sensation in the 1990&#39;s and continues to be a popular franchise to this date.Pokemon the video game has evolved (pun intended) over the decades into a complex game that takesa lot of statistics and analyze to create teams that can win the meta at tournaments.</description>
    </item>
    
    <item>
      <title>Python Markdown in a Python Shell</title>
      <link>/post/pythonmarkdown/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/pythonmarkdown/</guid>
      <description>Markdown in a Python ShellMarkdown can be writen in a python shell and the code can be turned into a python block with a 4 space indention.This is all done with the markdown package. For example:
python_string = &amp;#39;Hello World&amp;#39;print(python_string)The problem with doing it in the shell is that while converting to html is easy with the cmd line:
python -m markdown -x codehilite some_markdown.</description>
    </item>
    
    <item>
      <title>Python in RMarkdown</title>
      <link>/post/pythoninrmarkdown/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/pythoninrmarkdown/</guid>
      <description>Python in RStudioPython blocks of code can be written in Rmarkdown and knited with knitr. For example:
python_string = &amp;quot;Hello World&amp;quot;print(python_string)## Hello WorldHowever, unlike R code blocks the data does not transfer from code block to code block. This means you must import packages and data every code block. This is fine for some short examples or for a graph, but this will get tiresome and wordy very quickly if you want to explain more than one step in-depth.</description>
    </item>
    
  </channel>
</rss>